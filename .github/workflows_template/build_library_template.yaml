name: Build library

on:
  push:
    tags:
      - 'v*'

env:
  LLAMACPP_VERSION: b5261
  CUDA: 12.2.0

jobs:
  ################################ ArchChecker ################################

  archchecker_linux_build:
    name: Build ArchChecker Linux
    runs-on: ubuntu-22.04

    env:
        UPLOAD_NAME: linux-archchecker
        UPLOAD_PATH: archchecker/build/libarchchecker.so

    steps:
        @@checkout@@
        @@build_archchecker@@
        @@upload_with_path@@

  archchecker_windows_build:
    name: Build ArchChecker Windows
    runs-on: windows-2019

    env:
        UPLOAD_NAME: windows-archchecker
        UPLOAD_PATH: archchecker/build/Release/archchecker.dll

    steps:
        @@checkout@@
        @@build_archchecker@@
        @@upload_with_path@@


  ################################ Linux ################################

  linux-build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        include:
          - arch: 'noavx'
          - arch: 'avx2'
          - arch: 'avx'
          - arch: 'avx512'
          - arch: 'vulkan'
          - arch: 'tinyblas'
          - arch: 'cublas'
            
    steps:
        @@setup_libs_linux@@

        @@checkout@@
        @@setup_llama_cpp@@
        @@add_licenses@@

        @@setup_vulkan_linux@@
        @@setup_cuda_linux@@
        @@link_cuda_linux@@

        @@cpu-cores@@
        @@cmake_build@@
        @@test_build_unix@@

        @@pack_artifacts_unix@@
        @@upload@@

  linux-hip:
    runs-on: ubuntu-22.04
    container: rocm/dev-ubuntu-22.04:5.5

    strategy:
      matrix:
        include:
          - arch: 'hip'

    steps:
        @@setup_libs_linux@@

        @@checkout@@
        @@setup_llama_cpp@@
        @@add_licenses@@

        @@setup_hip_linux@@

        @@set_build_params_hip_linux@@
        @@cmake_build@@

        @@pack_artifacts_unix@@
        @@upload@@

################################ macOS ################################

  macOS-arm64-build:
    runs-on: macos-14

    strategy:
      matrix:
        include:
          - arch: 'arm64_acc'
          - arch: 'arm64_no_acc'

    steps:
        @@setup_libs_macos@@

        @@checkout@@
        @@setup_llama_cpp@@
        @@add_licenses@@

        @@cpu-cores@@
        @@cmake_build@@
        @@test_build_unix@@

        @@pack_artifacts_unix@@
        @@upload@@

  macOS-x64-build:
    runs-on: macos-13

    strategy:
      matrix:
        include:
          - arch: 'x64_acc'
          - arch: 'x64_no_acc'

    steps:
        @@setup_libs_macos@@

        @@checkout@@
        @@setup_llama_cpp@@
        @@add_licenses@@

        @@cpu-cores@@
        @@cmake_build@@
        @@test_build_unix@@

        @@pack_artifacts_unix@@
        @@upload@@


################################ Windows ################################

  windows-build:
    runs-on: windows-2019

    env:
      VULKAN_VERSION: 1.3.261.1
      PLATFORM: windows

    strategy:
      matrix:
        include:
          - arch: 'noavx'
          - arch: 'avx2'
          - arch: 'avx'
          - arch: 'avx512'
          - arch: 'vulkan'
          - arch: 'tinyblas'
          - arch: 'cublas'

    steps:
        @@checkout@@
        @@setup_llama_cpp@@
        @@add_licenses@@

        @@setup_vulcan_windows@@
        @@setup_openssl_windows@@
        @@setup_cuda_windows@@

        @@cpu-cores@@
        @@cmake_build@@

        @@copy_cuda_dlls@@
        @@pack_artifacts_windows@@
        @@upload@@

  windows-hip:
    runs-on: windows-2019

    env:
      PLATFORM: windows
    
    strategy:
      matrix:
        include:
          - arch: 'hip'

    steps:
        @@checkout@@
        @@setup_llama_cpp@@
        @@add_licenses@@

        @@setup_openssl_windows@@
        @@setup_hip_windows@@

        @@cpu-cores@@
        @@cmake_build_hip_windows@@

        @@pack_artifacts_windows@@
        @@upload@@

################################ Android ################################

  android-build:
    runs-on: ubuntu-22.04

    steps:
        @@setup_libs_linux@@

        @@checkout@@
        @@setup_llama_cpp@@
        @@add_licenses@@

        @@set_ndk_var_linux@@
        @@cmake_build_android@@

        @@pack_artifacts_android@@
        @@upload@@

################################ iOS ################################

  ios-build:
    runs-on: macos-14

    strategy:
      matrix:
        include:
          - arch: 'ios'
            cmake_vars: '-DCMAKE_SYSTEM_NAME=iOS'
          - arch: 'visionos'
            cmake_vars: '-DCMAKE_SYSTEM_NAME=visionOS'

    steps:
        @@setup_libs_macos@@

        @@checkout@@
        @@setup_llama_cpp@@
        @@add_licenses@@

        @@cmake_build@@
        @@link_libraries_ios@@

        @@pack_artifacts_ios@@
        @@upload@@

################################ Release ################################

  create_release:
    name: Create Release
    runs-on: macos-14
    needs:
      - archchecker_linux_build
      - archchecker_windows_build
      - linux-build
      - linux-hip
      - macOS-arm64-build
      - macOS-x64-build
      - windows-build
      - windows-hip
      - android-build
      - ios-build
    steps:
        @@checkout@@
        @@set_release_prefix@@
        @@download_artifacts@@
        @@unzip_artifacts@@
        @@combine_macos_libraries@@
        @@merge_artifacts@@
        @@release@@
