.\" generated by cd2nroff 0.1 from CURLOPT_SSL_SIGNATURE_ALGORITHMS.md
.TH CURLOPT_SSL_SIGNATURE_ALGORITHMS 3 "2025-06-05" libcurl
.SH NAME
CURLOPT_SSL_SIGNATURE_ALGORITHMS \- signature algorithms to use for TLS
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSL_SIGNATURE_ALGORITHMS, char *list);
.fi
.SH DESCRIPTION
Pass a char pointer, pointing to a null\-terminated string holding the list of
signature algorithms to use for the TLS connection. The list must be syntactically
correct, it consists of one or more signature algorithm strings separated by colons.

A valid example of a signature algorithms list with OpenSSL is:
.nf
"DSA+SHA256:rsa_pss_pss_sha256"
.fi

The application does not have to keep the string around after setting this
option.

Using this option multiple times makes the last set string override the
previous ones. Set it to NULL to disable its use again.

Works with OpenSSL and its BoringSSL fork (added in 8.14.0).
.SH DEFAULT
NULL, use built\-in list
.SH PROTOCOLS
This functionality affects all TLS based protocols: HTTPS, FTPS, IMAPS, POP3S, SMTPS etc.

This option works only with the following TLS backends:
OpenSSL
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(curl, CURLOPT_SSL_SIGNATURE_ALGORITHMS,
                     "DSA+SHA256:rsa_pss_pss_sha256");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH HISTORY
OpenSSL support added in 8.14.0.
.SH AVAILABILITY
Added in curl 8.14.0
.SH RETURN VALUE
\fIcurl_easy_setopt(3)\fP returns a CURLcode indicating success or error.

CURLE_OK (0) means everything was OK, non\-zero means an error occurred, see
\fIlibcurl\-errors(3)\fP.
.SH SEE ALSO
.BR CURLOPT_SSLVERSION (3),
.BR CURLOPT_SSL_CIPHER_LIST (3),
.BR CURLOPT_SSL_EC_CURVES (3),
.BR CURLOPT_USE_SSL (3)
